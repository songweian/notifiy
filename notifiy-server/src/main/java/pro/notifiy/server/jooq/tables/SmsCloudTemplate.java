/*
 * This file is generated by jOOQ.
 */
package pro.notifiy.server.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import pro.notifiy.server.jooq.Keys;
import pro.notifiy.server.jooq.Notify;
import pro.notifiy.server.jooq.tables.records.SmsCloudTemplateRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsCloudTemplate extends TableImpl<SmsCloudTemplateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>notify.sms_cloud_template</code>
     */
    public static final SmsCloudTemplate SMS_CLOUD_TEMPLATE = new SmsCloudTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmsCloudTemplateRecord> getRecordType() {
        return SmsCloudTemplateRecord.class;
    }

    /**
     * The column <code>notify.sms_cloud_template.id</code>.
     */
    public final TableField<SmsCloudTemplateRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>notify.sms_cloud_template.app_id</code>.
     */
    public final TableField<SmsCloudTemplateRecord, String> APP_ID = createField(DSL.name("app_id"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>notify.sms_cloud_template.template_code</code>.
     */
    public final TableField<SmsCloudTemplateRecord, String> TEMPLATE_CODE = createField(DSL.name("template_code"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>notify.sms_cloud_template.cloud_template_content</code>.
     */
    public final TableField<SmsCloudTemplateRecord, String> CLOUD_TEMPLATE_CONTENT = createField(DSL.name("cloud_template_content"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>notify.sms_cloud_template.cloud_template_code</code>.
     */
    public final TableField<SmsCloudTemplateRecord, String> CLOUD_TEMPLATE_CODE = createField(DSL.name("cloud_template_code"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>notify.sms_cloud_template.cloud_sign_name</code>.
     */
    public final TableField<SmsCloudTemplateRecord, String> CLOUD_SIGN_NAME = createField(DSL.name("cloud_sign_name"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>notify.sms_cloud_template.cloud_sign_code</code>.
     */
    public final TableField<SmsCloudTemplateRecord, String> CLOUD_SIGN_CODE = createField(DSL.name("cloud_sign_code"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>notify.sms_cloud_template.cloud_state</code>.
     */
    public final TableField<SmsCloudTemplateRecord, String> CLOUD_STATE = createField(DSL.name("cloud_state"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>notify.sms_cloud_template.create_time</code>.
     */
    public final TableField<SmsCloudTemplateRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>notify.sms_cloud_template.update_time</code>.
     */
    public final TableField<SmsCloudTemplateRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private SmsCloudTemplate(Name alias, Table<SmsCloudTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmsCloudTemplate(Name alias, Table<SmsCloudTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>notify.sms_cloud_template</code> table reference
     */
    public SmsCloudTemplate(String alias) {
        this(DSL.name(alias), SMS_CLOUD_TEMPLATE);
    }

    /**
     * Create an aliased <code>notify.sms_cloud_template</code> table reference
     */
    public SmsCloudTemplate(Name alias) {
        this(alias, SMS_CLOUD_TEMPLATE);
    }

    /**
     * Create a <code>notify.sms_cloud_template</code> table reference
     */
    public SmsCloudTemplate() {
        this(DSL.name("sms_cloud_template"), null);
    }

    public <O extends Record> SmsCloudTemplate(Table<O> child, ForeignKey<O, SmsCloudTemplateRecord> key) {
        super(child, key, SMS_CLOUD_TEMPLATE);
    }

    @Override
    public Schema getSchema() {
        return Notify.NOTIFY;
    }

    @Override
    public Identity<SmsCloudTemplateRecord, Long> getIdentity() {
        return (Identity<SmsCloudTemplateRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SmsCloudTemplateRecord> getPrimaryKey() {
        return Keys.KEY_SMS_CLOUD_TEMPLATE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SmsCloudTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<SmsCloudTemplateRecord>>asList(Keys.KEY_SMS_CLOUD_TEMPLATE_PRIMARY, Keys.KEY_SMS_CLOUD_TEMPLATE_TEMPLATE_CODE);
    }

    @Override
    public SmsCloudTemplate as(String alias) {
        return new SmsCloudTemplate(DSL.name(alias), this);
    }

    @Override
    public SmsCloudTemplate as(Name alias) {
        return new SmsCloudTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsCloudTemplate rename(String name) {
        return new SmsCloudTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsCloudTemplate rename(Name name) {
        return new SmsCloudTemplate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
