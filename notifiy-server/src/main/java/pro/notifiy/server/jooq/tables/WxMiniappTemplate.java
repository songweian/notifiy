/*
 * This file is generated by jOOQ.
 */
package pro.notifiy.server.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import pro.notifiy.server.jooq.Keys;
import pro.notifiy.server.jooq.Notify;
import pro.notifiy.server.jooq.tables.records.WxMiniappTemplateRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WxMiniappTemplate extends TableImpl<WxMiniappTemplateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>notify.wx_miniapp_template</code>
     */
    public static final WxMiniappTemplate WX_MINIAPP_TEMPLATE = new WxMiniappTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WxMiniappTemplateRecord> getRecordType() {
        return WxMiniappTemplateRecord.class;
    }

    /**
     * The column <code>notify.wx_miniapp_template.id</code>.
     */
    public final TableField<WxMiniappTemplateRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.app_id</code>.
     */
    public final TableField<WxMiniappTemplateRecord, String> APP_ID = createField(DSL.name("app_id"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.template_code</code>.
     */
    public final TableField<WxMiniappTemplateRecord, String> TEMPLATE_CODE = createField(DSL.name("template_code"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.template_content</code>.
     */
    public final TableField<WxMiniappTemplateRecord, String> TEMPLATE_CONTENT = createField(DSL.name("template_content"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.default_params</code>.
     */
    public final TableField<WxMiniappTemplateRecord, String> DEFAULT_PARAMS = createField(DSL.name("default_params"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.ext_params</code>.
     */
    public final TableField<WxMiniappTemplateRecord, String> EXT_PARAMS = createField(DSL.name("ext_params"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.state</code>.
     */
    public final TableField<WxMiniappTemplateRecord, String> STATE = createField(DSL.name("state"), SQLDataType.VARCHAR(10).nullable(false).defaultValue(DSL.inline("INIT", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.create_time</code>.
     */
    public final TableField<WxMiniappTemplateRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>notify.wx_miniapp_template.update_time</code>.
     */
    public final TableField<WxMiniappTemplateRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private WxMiniappTemplate(Name alias, Table<WxMiniappTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private WxMiniappTemplate(Name alias, Table<WxMiniappTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>notify.wx_miniapp_template</code> table reference
     */
    public WxMiniappTemplate(String alias) {
        this(DSL.name(alias), WX_MINIAPP_TEMPLATE);
    }

    /**
     * Create an aliased <code>notify.wx_miniapp_template</code> table reference
     */
    public WxMiniappTemplate(Name alias) {
        this(alias, WX_MINIAPP_TEMPLATE);
    }

    /**
     * Create a <code>notify.wx_miniapp_template</code> table reference
     */
    public WxMiniappTemplate() {
        this(DSL.name("wx_miniapp_template"), null);
    }

    public <O extends Record> WxMiniappTemplate(Table<O> child, ForeignKey<O, WxMiniappTemplateRecord> key) {
        super(child, key, WX_MINIAPP_TEMPLATE);
    }

    @Override
    public Schema getSchema() {
        return Notify.NOTIFY;
    }

    @Override
    public Identity<WxMiniappTemplateRecord, Long> getIdentity() {
        return (Identity<WxMiniappTemplateRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WxMiniappTemplateRecord> getPrimaryKey() {
        return Keys.KEY_WX_MINIAPP_TEMPLATE_PRIMARY;
    }

    @Override
    public List<UniqueKey<WxMiniappTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<WxMiniappTemplateRecord>>asList(Keys.KEY_WX_MINIAPP_TEMPLATE_PRIMARY, Keys.KEY_WX_MINIAPP_TEMPLATE_TEMPLATE_CODE);
    }

    @Override
    public WxMiniappTemplate as(String alias) {
        return new WxMiniappTemplate(DSL.name(alias), this);
    }

    @Override
    public WxMiniappTemplate as(Name alias) {
        return new WxMiniappTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WxMiniappTemplate rename(String name) {
        return new WxMiniappTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WxMiniappTemplate rename(Name name) {
        return new WxMiniappTemplate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
