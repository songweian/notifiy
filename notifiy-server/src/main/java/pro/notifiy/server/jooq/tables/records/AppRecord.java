/*
 * This file is generated by jOOQ.
 */
package pro.notifiy.server.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import pro.notifiy.server.jooq.tables.App;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppRecord extends UpdatableRecordImpl<AppRecord> implements Record4<Long, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>notify.app.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>notify.app.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>notify.app.app_id</code>.
     */
    public void setAppId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>notify.app.app_id</code>.
     */
    public String getAppId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>notify.app.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>notify.app.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>notify.app.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>notify.app.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return App.APP.ID;
    }

    @Override
    public Field<String> field2() {
        return App.APP.APP_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return App.APP.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return App.APP.UPDATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAppId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAppId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdateTime();
    }

    @Override
    public AppRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AppRecord value2(String value) {
        setAppId(value);
        return this;
    }

    @Override
    public AppRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AppRecord value4(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public AppRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppRecord
     */
    public AppRecord() {
        super(App.APP);
    }

    /**
     * Create a detached, initialised AppRecord
     */
    public AppRecord(Long id, String appId, LocalDateTime createTime, LocalDateTime updateTime) {
        super(App.APP);

        setId(id);
        setAppId(appId);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
    }
}
